generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mongodb"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model Category {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  name      String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Likes {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  postId    String   @unique @db.ObjectId
  userId    String   @unique @db.ObjectId
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model MediaFile {
  id               String   @id @default(auto()) @map("_id") @db.ObjectId
  providerPublicId String
  tweetId          String   @db.ObjectId
  url              String
  userId           String   @db.ObjectId
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt
}

model Permissions {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  action     String
  conditions String[]
  fields     String[]
  inverted   Boolean
  subject    String
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

model Post {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Profile {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  userId    String   @unique @db.ObjectId
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model RefreshToken {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  token     String   @unique
  userId    String   @db.ObjectId
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Roles {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  name        String   @unique
  permissions String   @db.ObjectId
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Subscription {
  id             String   @id @default(auto()) @map("_id") @db.ObjectId
  endpoint       String
  expirationTime String
  keys_auth      String   @unique
  keys_p256dh    String
  userId         String   @db.ObjectId
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
}

model Tweet {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  authorId  String   @db.ObjectId
  replyToId String?  @db.ObjectId
  text      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model User {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  email        String   @unique
  first_name   String
  last_name    String
  password     String
  profileImage String
  role         String
  username     String   @unique
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
}
